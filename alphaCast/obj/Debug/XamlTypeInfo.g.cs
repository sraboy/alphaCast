//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace alphaCast
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace alphaCast.alphaCast_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[12];
            _typeNameTable[0] = "alphaCast.MainPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "System.Collections.ObjectModel.ObservableCollection`1<alphaCast.Podcast>";
            _typeNameTable[4] = "System.Collections.ObjectModel.Collection`1<alphaCast.Podcast>";
            _typeNameTable[5] = "Object";
            _typeNameTable[6] = "alphaCast.Podcast";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "Int32";
            _typeNameTable[9] = "Double";
            _typeNameTable[10] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[11] = "alphaCast.PodcastLibrary";

            _typeTable = new global::System.Type[12];
            _typeTable[0] = typeof(global::alphaCast.MainPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::alphaCast.Podcast>);
            _typeTable[4] = typeof(global::System.Collections.ObjectModel.Collection<global::alphaCast.Podcast>);
            _typeTable[5] = typeof(global::System.Object);
            _typeTable[6] = typeof(global::alphaCast.Podcast);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::System.Int32);
            _typeTable[9] = typeof(global::System.Double);
            _typeTable[10] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[11] = typeof(global::alphaCast.PodcastLibrary);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainPage() { return new global::alphaCast.MainPage(); }
        private object Activate_3_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::alphaCast.Podcast>(); }
        private object Activate_4_Collection() { return new global::System.Collections.ObjectModel.Collection<global::alphaCast.Podcast>(); }
        private object Activate_6_Podcast() { return new global::alphaCast.Podcast(); }
        private object Activate_10_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_11_PodcastLibrary() { return new global::alphaCast.PodcastLibrary(); }
        private void VectorAdd_3_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::alphaCast.Podcast>)instance;
            var newItem = (global::alphaCast.Podcast)item;
            collection.Add(newItem);
        }
        private void VectorAdd_4_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::alphaCast.Podcast>)instance;
            var newItem = (global::alphaCast.Podcast)item;
            collection.Add(newItem);
        }
        private void VectorAdd_10_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  alphaCast.MainPage
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_MainPage;
                userType.AddMemberName("SearchResults");
                userType.AddMemberName("SearchCriteria");
                userType.AddMemberName("SelectedPodcast");
                userType.AddMemberName("Library");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  System.Collections.ObjectModel.ObservableCollection`1<alphaCast.Podcast>
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<alphaCast.Podcast>"));
                userType.CollectionAdd = VectorAdd_3_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  System.Collections.ObjectModel.Collection`1<alphaCast.Podcast>
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_Collection;
                userType.CollectionAdd = VectorAdd_4_Collection;
                xamlType = userType;
                break;

            case 5:   //  Object
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  alphaCast.Podcast
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_Podcast;
                userType.AddMemberName("WrapperType");
                userType.AddMemberName("Kind");
                userType.AddMemberName("ArtistId");
                userType.AddMemberName("CollectionId");
                userType.AddMemberName("TrackId");
                userType.AddMemberName("ArtistName");
                userType.AddMemberName("CollectionName");
                userType.AddMemberName("CollectionCensoredName");
                userType.AddMemberName("TrackCensoredName");
                userType.AddMemberName("ArtistViewUrl");
                userType.AddMemberName("CollectionViewUrl");
                userType.AddMemberName("FeedUrl");
                userType.AddMemberName("TrackViewUrl");
                userType.AddMemberName("ArtworkUrl30");
                userType.AddMemberName("ArtworkUrl60");
                userType.AddMemberName("ArtworkUrl100");
                userType.AddMemberName("CollectionPrice");
                userType.AddMemberName("TrackPrice");
                userType.AddMemberName("TrackRentalPrice");
                userType.AddMemberName("CollectionHdPrice");
                userType.AddMemberName("TrackHdPrice");
                userType.AddMemberName("TrackHdRentalPrice");
                userType.AddMemberName("ReleaseDate");
                userType.AddMemberName("CollectionExplicitness");
                userType.AddMemberName("TrackExplicitness");
                userType.AddMemberName("Country");
                userType.AddMemberName("Currency");
                userType.AddMemberName("PrimaryGenreName");
                userType.AddMemberName("RadioStationUrl");
                userType.AddMemberName("ArtworkUrl600");
                userType.AddMemberName("GenreIds");
                userType.AddMemberName("TrackCount");
                userType.AddMemberName("Genres");
                userType.AddMemberName("TrackName");
                userType.AddMemberName("Description");
                userType.AddMemberName("Link");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  String
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Int32
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Double
                xamlType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  System.Collections.Generic.List`1<String>
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_10_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  alphaCast.PodcastLibrary
                userType = new global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_MainPage_SearchResults(object instance)
        {
            var that = (global::alphaCast.MainPage)instance;
            return that.SearchResults;
        }
        private void set_0_MainPage_SearchResults(object instance, object Value)
        {
            var that = (global::alphaCast.MainPage)instance;
            that.SearchResults = (global::System.Collections.ObjectModel.ObservableCollection<global::alphaCast.Podcast>)Value;
        }
        private object get_1_Podcast_WrapperType(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.WrapperType;
        }
        private void set_1_Podcast_WrapperType(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.WrapperType = (global::System.String)Value;
        }
        private object get_2_Podcast_Kind(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Kind;
        }
        private void set_2_Podcast_Kind(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Kind = (global::System.String)Value;
        }
        private object get_3_Podcast_ArtistId(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtistId;
        }
        private void set_3_Podcast_ArtistId(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtistId = (global::System.Int32)Value;
        }
        private object get_4_Podcast_CollectionId(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionId;
        }
        private void set_4_Podcast_CollectionId(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionId = (global::System.Int32)Value;
        }
        private object get_5_Podcast_TrackId(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackId;
        }
        private void set_5_Podcast_TrackId(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackId = (global::System.Int32)Value;
        }
        private object get_6_Podcast_ArtistName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtistName;
        }
        private void set_6_Podcast_ArtistName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtistName = (global::System.String)Value;
        }
        private object get_7_Podcast_CollectionName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionName;
        }
        private void set_7_Podcast_CollectionName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionName = (global::System.String)Value;
        }
        private object get_8_Podcast_CollectionCensoredName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionCensoredName;
        }
        private void set_8_Podcast_CollectionCensoredName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionCensoredName = (global::System.String)Value;
        }
        private object get_9_Podcast_TrackCensoredName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackCensoredName;
        }
        private void set_9_Podcast_TrackCensoredName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackCensoredName = (global::System.String)Value;
        }
        private object get_10_Podcast_ArtistViewUrl(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtistViewUrl;
        }
        private void set_10_Podcast_ArtistViewUrl(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtistViewUrl = (global::System.String)Value;
        }
        private object get_11_Podcast_CollectionViewUrl(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionViewUrl;
        }
        private void set_11_Podcast_CollectionViewUrl(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionViewUrl = (global::System.String)Value;
        }
        private object get_12_Podcast_FeedUrl(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.FeedUrl;
        }
        private void set_12_Podcast_FeedUrl(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.FeedUrl = (global::System.String)Value;
        }
        private object get_13_Podcast_TrackViewUrl(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackViewUrl;
        }
        private void set_13_Podcast_TrackViewUrl(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackViewUrl = (global::System.String)Value;
        }
        private object get_14_Podcast_ArtworkUrl30(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtworkUrl30;
        }
        private void set_14_Podcast_ArtworkUrl30(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtworkUrl30 = (global::System.String)Value;
        }
        private object get_15_Podcast_ArtworkUrl60(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtworkUrl60;
        }
        private void set_15_Podcast_ArtworkUrl60(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtworkUrl60 = (global::System.String)Value;
        }
        private object get_16_Podcast_ArtworkUrl100(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtworkUrl100;
        }
        private void set_16_Podcast_ArtworkUrl100(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtworkUrl100 = (global::System.String)Value;
        }
        private object get_17_Podcast_CollectionPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionPrice;
        }
        private void set_17_Podcast_CollectionPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionPrice = (global::System.Double)Value;
        }
        private object get_18_Podcast_TrackPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackPrice;
        }
        private void set_18_Podcast_TrackPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackPrice = (global::System.Double)Value;
        }
        private object get_19_Podcast_TrackRentalPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackRentalPrice;
        }
        private void set_19_Podcast_TrackRentalPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackRentalPrice = (global::System.Int32)Value;
        }
        private object get_20_Podcast_CollectionHdPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionHdPrice;
        }
        private void set_20_Podcast_CollectionHdPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionHdPrice = (global::System.Int32)Value;
        }
        private object get_21_Podcast_TrackHdPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackHdPrice;
        }
        private void set_21_Podcast_TrackHdPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackHdPrice = (global::System.Int32)Value;
        }
        private object get_22_Podcast_TrackHdRentalPrice(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackHdRentalPrice;
        }
        private void set_22_Podcast_TrackHdRentalPrice(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackHdRentalPrice = (global::System.Int32)Value;
        }
        private object get_23_Podcast_ReleaseDate(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ReleaseDate;
        }
        private void set_23_Podcast_ReleaseDate(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ReleaseDate = (global::System.String)Value;
        }
        private object get_24_Podcast_CollectionExplicitness(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.CollectionExplicitness;
        }
        private void set_24_Podcast_CollectionExplicitness(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.CollectionExplicitness = (global::System.String)Value;
        }
        private object get_25_Podcast_TrackExplicitness(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackExplicitness;
        }
        private void set_25_Podcast_TrackExplicitness(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackExplicitness = (global::System.String)Value;
        }
        private object get_26_Podcast_Country(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Country;
        }
        private void set_26_Podcast_Country(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_27_Podcast_Currency(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Currency;
        }
        private void set_27_Podcast_Currency(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Currency = (global::System.String)Value;
        }
        private object get_28_Podcast_PrimaryGenreName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.PrimaryGenreName;
        }
        private void set_28_Podcast_PrimaryGenreName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.PrimaryGenreName = (global::System.String)Value;
        }
        private object get_29_Podcast_RadioStationUrl(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.RadioStationUrl;
        }
        private void set_29_Podcast_RadioStationUrl(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.RadioStationUrl = (global::System.String)Value;
        }
        private object get_30_Podcast_ArtworkUrl600(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.ArtworkUrl600;
        }
        private void set_30_Podcast_ArtworkUrl600(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.ArtworkUrl600 = (global::System.String)Value;
        }
        private object get_31_Podcast_GenreIds(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.GenreIds;
        }
        private void set_31_Podcast_GenreIds(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.GenreIds = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_32_Podcast_TrackCount(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackCount;
        }
        private void set_32_Podcast_TrackCount(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackCount = (global::System.Int32)Value;
        }
        private object get_33_Podcast_Genres(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Genres;
        }
        private void set_33_Podcast_Genres(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Genres = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_34_Podcast_TrackName(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.TrackName;
        }
        private void set_34_Podcast_TrackName(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.TrackName = (global::System.String)Value;
        }
        private object get_35_Podcast_Description(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Description;
        }
        private void set_35_Podcast_Description(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_36_Podcast_Link(object instance)
        {
            var that = (global::alphaCast.Podcast)instance;
            return that.Link;
        }
        private void set_36_Podcast_Link(object instance, object Value)
        {
            var that = (global::alphaCast.Podcast)instance;
            that.Link = (global::System.String)Value;
        }
        private object get_37_MainPage_SearchCriteria(object instance)
        {
            var that = (global::alphaCast.MainPage)instance;
            return that.SearchCriteria;
        }
        private void set_37_MainPage_SearchCriteria(object instance, object Value)
        {
            var that = (global::alphaCast.MainPage)instance;
            that.SearchCriteria = (global::System.String)Value;
        }
        private object get_38_MainPage_SelectedPodcast(object instance)
        {
            var that = (global::alphaCast.MainPage)instance;
            return that.SelectedPodcast;
        }
        private void set_38_MainPage_SelectedPodcast(object instance, object Value)
        {
            var that = (global::alphaCast.MainPage)instance;
            that.SelectedPodcast = (global::alphaCast.Podcast)Value;
        }
        private object get_39_MainPage_Library(object instance)
        {
            var that = (global::alphaCast.MainPage)instance;
            return that.Library;
        }
        private void set_39_MainPage_Library(object instance, object Value)
        {
            var that = (global::alphaCast.MainPage)instance;
            that.Library = (global::alphaCast.PodcastLibrary)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::alphaCast.alphaCast_XamlTypeInfo.XamlMember xamlMember = null;
            global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "alphaCast.MainPage.SearchResults":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.MainPage");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "SearchResults", "System.Collections.ObjectModel.ObservableCollection`1<alphaCast.Podcast>");
                xamlMember.Getter = get_0_MainPage_SearchResults;
                xamlMember.Setter = set_0_MainPage_SearchResults;
                break;
            case "alphaCast.Podcast.WrapperType":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "WrapperType", "String");
                xamlMember.Getter = get_1_Podcast_WrapperType;
                xamlMember.Setter = set_1_Podcast_WrapperType;
                break;
            case "alphaCast.Podcast.Kind":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Kind", "String");
                xamlMember.Getter = get_2_Podcast_Kind;
                xamlMember.Setter = set_2_Podcast_Kind;
                break;
            case "alphaCast.Podcast.ArtistId":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtistId", "Int32");
                xamlMember.Getter = get_3_Podcast_ArtistId;
                xamlMember.Setter = set_3_Podcast_ArtistId;
                break;
            case "alphaCast.Podcast.CollectionId":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionId", "Int32");
                xamlMember.Getter = get_4_Podcast_CollectionId;
                xamlMember.Setter = set_4_Podcast_CollectionId;
                break;
            case "alphaCast.Podcast.TrackId":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackId", "Int32");
                xamlMember.Getter = get_5_Podcast_TrackId;
                xamlMember.Setter = set_5_Podcast_TrackId;
                break;
            case "alphaCast.Podcast.ArtistName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtistName", "String");
                xamlMember.Getter = get_6_Podcast_ArtistName;
                xamlMember.Setter = set_6_Podcast_ArtistName;
                break;
            case "alphaCast.Podcast.CollectionName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionName", "String");
                xamlMember.Getter = get_7_Podcast_CollectionName;
                xamlMember.Setter = set_7_Podcast_CollectionName;
                break;
            case "alphaCast.Podcast.CollectionCensoredName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionCensoredName", "String");
                xamlMember.Getter = get_8_Podcast_CollectionCensoredName;
                xamlMember.Setter = set_8_Podcast_CollectionCensoredName;
                break;
            case "alphaCast.Podcast.TrackCensoredName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackCensoredName", "String");
                xamlMember.Getter = get_9_Podcast_TrackCensoredName;
                xamlMember.Setter = set_9_Podcast_TrackCensoredName;
                break;
            case "alphaCast.Podcast.ArtistViewUrl":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtistViewUrl", "String");
                xamlMember.Getter = get_10_Podcast_ArtistViewUrl;
                xamlMember.Setter = set_10_Podcast_ArtistViewUrl;
                break;
            case "alphaCast.Podcast.CollectionViewUrl":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionViewUrl", "String");
                xamlMember.Getter = get_11_Podcast_CollectionViewUrl;
                xamlMember.Setter = set_11_Podcast_CollectionViewUrl;
                break;
            case "alphaCast.Podcast.FeedUrl":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "FeedUrl", "String");
                xamlMember.Getter = get_12_Podcast_FeedUrl;
                xamlMember.Setter = set_12_Podcast_FeedUrl;
                break;
            case "alphaCast.Podcast.TrackViewUrl":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackViewUrl", "String");
                xamlMember.Getter = get_13_Podcast_TrackViewUrl;
                xamlMember.Setter = set_13_Podcast_TrackViewUrl;
                break;
            case "alphaCast.Podcast.ArtworkUrl30":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtworkUrl30", "String");
                xamlMember.Getter = get_14_Podcast_ArtworkUrl30;
                xamlMember.Setter = set_14_Podcast_ArtworkUrl30;
                break;
            case "alphaCast.Podcast.ArtworkUrl60":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtworkUrl60", "String");
                xamlMember.Getter = get_15_Podcast_ArtworkUrl60;
                xamlMember.Setter = set_15_Podcast_ArtworkUrl60;
                break;
            case "alphaCast.Podcast.ArtworkUrl100":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtworkUrl100", "String");
                xamlMember.Getter = get_16_Podcast_ArtworkUrl100;
                xamlMember.Setter = set_16_Podcast_ArtworkUrl100;
                break;
            case "alphaCast.Podcast.CollectionPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionPrice", "Double");
                xamlMember.Getter = get_17_Podcast_CollectionPrice;
                xamlMember.Setter = set_17_Podcast_CollectionPrice;
                break;
            case "alphaCast.Podcast.TrackPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackPrice", "Double");
                xamlMember.Getter = get_18_Podcast_TrackPrice;
                xamlMember.Setter = set_18_Podcast_TrackPrice;
                break;
            case "alphaCast.Podcast.TrackRentalPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackRentalPrice", "Int32");
                xamlMember.Getter = get_19_Podcast_TrackRentalPrice;
                xamlMember.Setter = set_19_Podcast_TrackRentalPrice;
                break;
            case "alphaCast.Podcast.CollectionHdPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionHdPrice", "Int32");
                xamlMember.Getter = get_20_Podcast_CollectionHdPrice;
                xamlMember.Setter = set_20_Podcast_CollectionHdPrice;
                break;
            case "alphaCast.Podcast.TrackHdPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackHdPrice", "Int32");
                xamlMember.Getter = get_21_Podcast_TrackHdPrice;
                xamlMember.Setter = set_21_Podcast_TrackHdPrice;
                break;
            case "alphaCast.Podcast.TrackHdRentalPrice":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackHdRentalPrice", "Int32");
                xamlMember.Getter = get_22_Podcast_TrackHdRentalPrice;
                xamlMember.Setter = set_22_Podcast_TrackHdRentalPrice;
                break;
            case "alphaCast.Podcast.ReleaseDate":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ReleaseDate", "String");
                xamlMember.Getter = get_23_Podcast_ReleaseDate;
                xamlMember.Setter = set_23_Podcast_ReleaseDate;
                break;
            case "alphaCast.Podcast.CollectionExplicitness":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "CollectionExplicitness", "String");
                xamlMember.Getter = get_24_Podcast_CollectionExplicitness;
                xamlMember.Setter = set_24_Podcast_CollectionExplicitness;
                break;
            case "alphaCast.Podcast.TrackExplicitness":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackExplicitness", "String");
                xamlMember.Getter = get_25_Podcast_TrackExplicitness;
                xamlMember.Setter = set_25_Podcast_TrackExplicitness;
                break;
            case "alphaCast.Podcast.Country":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_26_Podcast_Country;
                xamlMember.Setter = set_26_Podcast_Country;
                break;
            case "alphaCast.Podcast.Currency":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Currency", "String");
                xamlMember.Getter = get_27_Podcast_Currency;
                xamlMember.Setter = set_27_Podcast_Currency;
                break;
            case "alphaCast.Podcast.PrimaryGenreName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "PrimaryGenreName", "String");
                xamlMember.Getter = get_28_Podcast_PrimaryGenreName;
                xamlMember.Setter = set_28_Podcast_PrimaryGenreName;
                break;
            case "alphaCast.Podcast.RadioStationUrl":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "RadioStationUrl", "String");
                xamlMember.Getter = get_29_Podcast_RadioStationUrl;
                xamlMember.Setter = set_29_Podcast_RadioStationUrl;
                break;
            case "alphaCast.Podcast.ArtworkUrl600":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "ArtworkUrl600", "String");
                xamlMember.Getter = get_30_Podcast_ArtworkUrl600;
                xamlMember.Setter = set_30_Podcast_ArtworkUrl600;
                break;
            case "alphaCast.Podcast.GenreIds":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "GenreIds", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_31_Podcast_GenreIds;
                xamlMember.Setter = set_31_Podcast_GenreIds;
                break;
            case "alphaCast.Podcast.TrackCount":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackCount", "Int32");
                xamlMember.Getter = get_32_Podcast_TrackCount;
                xamlMember.Setter = set_32_Podcast_TrackCount;
                break;
            case "alphaCast.Podcast.Genres":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Genres", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_33_Podcast_Genres;
                xamlMember.Setter = set_33_Podcast_Genres;
                break;
            case "alphaCast.Podcast.TrackName":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "TrackName", "String");
                xamlMember.Getter = get_34_Podcast_TrackName;
                xamlMember.Setter = set_34_Podcast_TrackName;
                break;
            case "alphaCast.Podcast.Description":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_35_Podcast_Description;
                xamlMember.Setter = set_35_Podcast_Description;
                break;
            case "alphaCast.Podcast.Link":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.Podcast");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Link", "String");
                xamlMember.Getter = get_36_Podcast_Link;
                xamlMember.Setter = set_36_Podcast_Link;
                break;
            case "alphaCast.MainPage.SearchCriteria":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.MainPage");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "SearchCriteria", "String");
                xamlMember.Getter = get_37_MainPage_SearchCriteria;
                xamlMember.Setter = set_37_MainPage_SearchCriteria;
                break;
            case "alphaCast.MainPage.SelectedPodcast":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.MainPage");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "SelectedPodcast", "alphaCast.Podcast");
                xamlMember.Getter = get_38_MainPage_SelectedPodcast;
                xamlMember.Setter = set_38_MainPage_SelectedPodcast;
                break;
            case "alphaCast.MainPage.Library":
                userType = (global::alphaCast.alphaCast_XamlTypeInfo.XamlUserType)GetXamlTypeByName("alphaCast.MainPage");
                xamlMember = new global::alphaCast.alphaCast_XamlTypeInfo.XamlMember(this, "Library", "alphaCast.PodcastLibrary");
                xamlMember.Getter = get_39_MainPage_Library;
                xamlMember.Setter = set_39_MainPage_Library;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::alphaCast.alphaCast_XamlTypeInfo.XamlSystemBaseType
    {
        global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::alphaCast.alphaCast_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


